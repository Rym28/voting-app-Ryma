name: Voting App â€“ CI/CD to AWS EKS (ARM64 + Cache)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to ECR
        run: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Ensure ECR repositories exist
        run: |
          for repo in vote vote-ui result result-ui worker; do
            aws ecr describe-repositories --repository-names $repo >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name $repo --region $AWS_REGION
          done

      - name: Build and push ARM64 images
        run: |
          for svc in vote vote-ui result result-ui worker; do
            echo "ðŸš€ Building $svc â†’ $ECR_REGISTRY/$svc:$IMAGE_TAG"
            docker buildx build --platform linux/arm64 \
              --cache-from type=local,src=/tmp/.buildx-cache \
              --cache-to type=local,dest=/tmp/.buildx-cache,mode=max \
              -t $ECR_REGISTRY/$svc:$IMAGE_TAG "./$svc" --push
          done

      - name: Connect to EKS
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Deploy Helm chart
        run: |
          echo "ðŸ§© Using registry: $ECR_REGISTRY"
          helm upgrade --install voting ./voting-app \
            --namespace $K8S_NAMESPACE --create-namespace \
            --set vote.image.repository=$ECR_REGISTRY/vote \
            --set vote.image.tag=$IMAGE_TAG \
            --set voteUi.image.repository=$ECR_REGISTRY/vote-ui \
            --set voteUi.image.tag=$IMAGE_TAG \
            --set result.image.repository=$ECR_REGISTRY/result \
            --set result.image.tag=$IMAGE_TAG \
            --set resultUi.image.repository=$ECR_REGISTRY/result-ui \
            --set resultUi.image.tag=$IMAGE_TAG \
            --set worker.image.repository=$ECR_REGISTRY/worker \
            --set worker.image.tag=$IMAGE_TAG

      - name: Verify
        run: |
          kubectl get pods -n $K8S_NAMESPACE
          kubectl get svc -n $K8S_NAMESPACE
