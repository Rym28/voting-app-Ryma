name: Voting App â€“ Build, Push and Deploy to EKS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    name: Build and Push all Voting App images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker images
        run: |
          SERVICES=("vote" "vote-ui" "result" "result-ui" "worker")

          for SERVICE in "${SERVICES[@]}"; do
            IMAGE_URI="${{ secrets.ECR_REGISTRY }}/${SERVICE}:${{ github.sha }}"
            echo "Building $SERVICE : $IMAGE_URI"
            docker build -t $IMAGE_URI ./$SERVICE
            docker push $IMAGE_URI
          done

      - name: Output images pushed
        run: echo "All Voting App images pushed to ${{ secrets.ECR_REGISTRY }}"

  deploy-to-eks:
    name: Deploy Voting App to EKS
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Update Kubernetes deployments
        run: |
          SERVICES=("vote" "vote-ui" "result" "result-ui" "worker")

          for SERVICE in "${SERVICES[@]}"; do
            echo "Updating $SERVICE deployment..."
            kubectl -n ${{ secrets.K8S_NAMESPACE }} set image deployment/${SERVICE}-deployment ${SERVICE}=${{ secrets.ECR_REGISTRY }}/${SERVICE}:${{ github.sha }} --record || true
          done

          echo "Waiting for rollouts..."
          kubectl -n ${{ secrets.K8S_NAMESPACE }} rollout status deployment --timeout=180s
          kubectl -n ${{ secrets.K8S_NAMESPACE }} get pods -o wide
